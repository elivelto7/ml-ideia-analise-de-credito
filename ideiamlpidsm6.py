# -*- coding: utf-8 -*-
"""IdeiAmlpidsm6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v-VBLQxcbZZSFUj_X4StLJI3eU9CPPqn

## Deploy

IdeiA - Análise de Crédito

ML - PI - Grupo Armazém de Ideias - DSM 6 2024/1 Fatec Franca

Alunos: Marcelo Luiz Siqueira Reis, João Paulo Cardoso Rodrigues, e, Elivelto Silva
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import joblib
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

# Load data
df = pd.read_csv('/content/application_credit_record_v5.csv', sep=',')

df.info()

# Preprocess data function
def preprocess_data(df):
    X = df.drop('status_do_emprestimo', axis=1)
    y = df['status_do_emprestimo']

    # Encode categorical variables
    label_encoders = {}
    for column in X.select_dtypes(include=['object']).columns:
        le = LabelEncoder()
        X[column] = le.fit_transform(X[column])
        label_encoders[column] = le

    return X, y, label_encoders

# Preprocess the data
X, y, label_encoders = preprocess_data(df)

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the RandomForest model
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Save the RandomForest model
joblib.dump(model, 'model_v5.pkl')

# Save the label encoders
joblib.dump(label_encoders, 'label_encoders.pkl')

# Evaluate the model
score = model.score(X_test, y_test)
print(f'Model accuracy: {score}')

